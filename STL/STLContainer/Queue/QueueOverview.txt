In general, Queue is a linear data structure where elements are inserted and deleted in the FIFO order. FIFO stands 
for First In First Out, which means that the first element to be inserted in the queue will be the first one to be
removed.

C++ STL has an in-built container adaptor that implements the queue data structure internally. We can directly use 
this container to implement queues in our programs and perform a number of operations available.

Insertion and Deletion in a queue are done from opposite ends. Insertions in a queue are done at the rear end 
whereas deletions are done at the front.


Feature	Stack (LIFO)	Queue (FIFO)
Insert	Push at the top	Push at the back
Remove	Pop from the top	Pop from the front
Order	Last-In-First-Out (LIFO)	First-In-First-Out (FIFO)

Insertion Order: 10 → 20 → 30 → 40
Deletion Order: 10 (first inserted) is removed first.


Queue Operations and Their Usage
The STL queue supports the following operations:

(1) push(x)
Inserts an element at the back of the queue.
Time Complexity: O(1)

(2) pop()
Removes the front element from the queue.
Time Complexity: O(1)

(3) front()
Returns the front element of the queue.
Time Complexity: O(1)

(4) back()
Returns the last element in the queue.
Time Complexity: O(1)

(5) size()
Returns the number of elements in the queue.
Time Complexity: O(1)

(6) empty()
Checks if the queue is empty.
Time Complexity: O(1)